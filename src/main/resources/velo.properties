###
#pureMemory=false
#pureMemoryV2=false
#debugMode=true
###
#debugLogCmd=true
#debugLogMerge=true
#debugLogTrainDict=false
#debugLogRestore=false
#bulkLoad=false
### append only, slot number > 1 for cluster migration
slotNumber=1
netWorkers=1
#indexWorkers=1
### eg:
#slotNumber=128
#netWorkers=8
#maxConnections=1000
###
dir=/tmp/velo-data
net.listenAddresses=127.0.0.1:7379
#dir=/tmp/velo-data2
#net.listenAddresses=127.0.0.1:7380
###
#net.socketSettings.implReadBufferSize=262144
###
#datacenterId=1
#machineId=1
###
#localTest=false
#password=123456
### config for each one 1 slot, !important !important !important
###
estimateKeyNumber=1000000
### compression
isValueSetUseCompression=true
isOnDynTrainDictForCompression=true
#isPureMemoryModeKeyBucketsUseCompression=false
#toCompressMinDataLength=64
#toTrainDictWhenKeyPrefixEndIndex=5
#request.trainSampleListMaxSize=5000
#request.dictSize=4096
#request.trainSampleMinBodyLength=4096
### key bucket
# when there are 100 million keys, one slot key loader max has 9 key bucket files, each file 2GB size,
# if compress ratio ~= 0.5, will cost ~= 9 * 2GB * 0.5 = 9GB
# if compress ratio ~= 0.2, will cost ~= 9 * 2GB * 0.2 = 3.6GB
#bucket.lruPerFd.percent=100
#bucket.lruPerFd.isWarmUpWhenStart=true
### chunk
## one chunk fd length = 64K segments * 4096 segment length = 256MB
chunk.segmentNumberPerFd=16384
chunk.fdPerChunk=8
chunk.segmentLength=4096
#chunk.isSegmentUseCompression=true
### one slot
#big.string.lru.maxSize=1000
kv.lru.maxSize=100000
###
#persist.volumeDirsBySlot=/mnt/data0:0-32,/mnt/data1:33-64,/mnt/data2:65-96,/mnt/data3:97-128
#persist.isUseDirectIO=false
#persist.isHashSaveMemberTogether=false
#persist.binlogOn=true
###
#persist.reverseIndexExpiredIfSecondsFromNow=86400
###
#persist.keyAnalysis.notBusyAddCountIncreasedLastSecond=1000
#persist.keyAnalysis.notBusyBeginTime=00:00:00.0
#persist.keyAnalysis.notBusyEndTime=06:00:00.0
#persist.keyAnalysis.onceIterateKeyCount=10000
#persist.keyAnalysis.groupByMinLengthForKey=5
#persist.keyAnalysis.groupByMaxLengthForKey=10
#persist.keyAnalysis.rocksDBFixedLengthPrefixExtractor=3
### wal
# change to 200 if memory is limit, when there are 100 million keys, one slot has 16384 wal groups,
# each group has 200 keys, if each encoded key/value ~= 200B, will cost ~= 16384 * 200 * 200B = 640MB
# short value (include remove flag value) each group has also 200 keys, if each encoded key/value ~= 100B, will cost ~= 16384 * 200 * 100B = 320MB
# if one slot kv lru max size = 10_000_000, means 10% cache hit, if each encoded key/value ~= 200B, will cost ~= 2GB
# so, need about 3GB memory for one slot
# if turn on all key bucket file read page lru cache, refer to bucket.lruPerFd.maxSize, need 4GB more
#wal.valueSizeTrigger=200
#wal.shortValueSizeTrigger=200
### repl
#zookeeperConnectString=127.0.0.1:2181
#zookeeperSessionTimeoutMs=30000
#zookeeperConnectionTimeoutMs=10000
# this is also as sentinel master name
#zookeeperRootPath=/velo/test_cluster
#canBeLeader=true
#isAsSlaveOfSlave=false
#targetAvailableZone=zone1
#clusterEnabled=true
### other
#number.doubleScale=2
### dyn-config
#dyn-config.type_zset_member_max_length=255
#dyn-config.type_set_member_max_length=255
#dyn-config.type_zset_max_size=4096
#dyn-config.type_hash_max_size=4096
#dyn-config.type_list_max_size=4096